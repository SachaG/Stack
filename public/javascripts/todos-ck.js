// An example Parse.js Backbone application based on the todo app by
// [Jérôme Gravel-Niquet](http://jgn.me/). This demo uses Parse to persist
// the todo items and provide user authentication and sessions.
$(function(){Parse.$=jQuery;Parse.initialize("3I1W7TRYNEJQ6buCdHdYalPobtt6D3F3fcrnS83k","V2DjHYFKsnkAeLH2ldkUAxL84zhWdrhBDTEFvsz2");var e=Parse.Object.extend("Todo",{defaults:{content:"empty todo...",done:!1},initialize:function(){this.get("content")||this.set({content:this.defaults.content})},toggle:function(){this.save({done:!this.get("done")})}}),t=Parse.Object.extend("AppState",{defaults:{filter:"all"}}),n=Parse.Collection.extend({model:e,done:function(){return this.filter(function(e){return e.get("done")})},remaining:function(){return this.without.apply(this,this.done())},nextOrder:function(){return this.length?this.last().get("order")+1:1},comparator:function(e){return e.get("order")}}),r=Parse.View.extend({tagName:"li",template:_.template($("#item-template").html()),events:{"click .toggle":"toggleDone","dblclick label.todo-content":"edit","click .todo-destroy":"clear","keypress .edit":"updateOnEnter","blur .edit":"close"},initialize:function(){_.bindAll(this,"render","close","remove");this.model.bind("change",this.render);this.model.bind("destroy",this.remove)},render:function(){$(this.el).html(this.template(this.model.toJSON()));this.input=this.$(".edit");return this},toggleDone:function(){this.model.toggle()},edit:function(){$(this.el).addClass("editing");this.input.focus()},close:function(){this.model.save({content:this.input.val()});$(this.el).removeClass("editing")},updateOnEnter:function(e){e.keyCode==13&&this.close()},clear:function(){this.model.destroy()}}),i=Parse.View.extend({statsTemplate:_.template($("#stats-template").html()),events:{"keypress #new-todo":"createOnEnter","click #clear-completed":"clearCompleted","click #toggle-all":"toggleAllComplete","click .log-out":"logOut","click ul#filters a":"selectFilter"},el:".content",initialize:function(){var t=this;_.bindAll(this,"addOne","addAll","addSome","render","toggleAllComplete","logOut","createOnEnter");this.$el.html(_.template($("#manage-todos-template").html()));this.input=this.$("#new-todo");this.allCheckbox=this.$("#toggle-all")[0];this.todos=new n;this.todos.query=new Parse.Query(e);this.todos.query.equalTo("user",Parse.User.current());this.todos.bind("add",this.addOne);this.todos.bind("reset",this.addAll);this.todos.bind("all",this.render);this.todos.fetch();a.on("change",this.filter,this)},logOut:function(e){Parse.User.logOut();new s;this.undelegateEvents();delete this},render:function(){var e=this.todos.done().length,t=this.todos.remaining().length;this.$("#todo-stats").html(this.statsTemplate({total:this.todos.length,done:e,remaining:t}));this.delegateEvents();this.allCheckbox.checked=!t},selectFilter:function(e){var t=$(e.target),n=t.attr("id");a.set({filter:n});Parse.history.navigate(n)},filter:function(){var e=a.get("filter");this.$("ul#filters a").removeClass("selected");this.$("ul#filters a#"+e).addClass("selected");e==="all"?this.addAll():e==="completed"?this.addSome(function(e){return e.get("done")}):this.addSome(function(e){return!e.get("done")})},resetFilters:function(){this.$("ul#filters a").removeClass("selected");this.$("ul#filters a#all").addClass("selected");this.addAll()},addOne:function(e){var t=new r({model:e});this.$("#todo-list").append(t.render().el)},addAll:function(e,t){this.$("#todo-list").html("");this.todos.each(this.addOne)},addSome:function(e){var t=this;this.$("#todo-list").html("");this.todos.chain().filter(e).each(function(e){t.addOne(e)})},createOnEnter:function(e){var t=this;if(e.keyCode!=13)return;this.todos.create({content:this.input.val(),order:this.todos.nextOrder(),done:!1,user:Parse.User.current(),ACL:new Parse.ACL(Parse.User.current())});this.input.val("");this.resetFilters()},clearCompleted:function(){_.each(this.todos.done(),function(e){e.destroy()});return!1},toggleAllComplete:function(){var e=this.allCheckbox.checked;this.todos.each(function(t){t.save({done:e})})}}),s=Parse.View.extend({events:{"submit form.login-form":"logIn","submit form.signup-form":"signUp"},el:".content",initialize:function(){_.bindAll(this,"logIn","signUp");this.render()},logIn:function(e){var t=this,n=this.$("#login-username").val(),r=this.$("#login-password").val();Parse.User.logIn(n,r,{success:function(e){new i;t.undelegateEvents();delete t},error:function(e,n){t.$(".login-form .error").html("Invalid username or password. Please try again.").show();this.$(".login-form button").removeAttr("disabled")}});this.$(".login-form button").attr("disabled","disabled");return!1},signUp:function(e){var t=this,n=this.$("#signup-username").val(),r=this.$("#signup-password").val();Parse.User.signUp(n,r,{ACL:new Parse.ACL},{success:function(e){new i;t.undelegateEvents();delete t},error:function(e,n){t.$(".signup-form .error").html(n.message).show();this.$(".signup-form button").removeAttr("disabled")}});this.$(".signup-form button").attr("disabled","disabled");return!1},render:function(){this.$el.html(_.template($("#login-template").html()));this.delegateEvents()}}),o=Parse.View.extend({el:$("#todoapp"),initialize:function(){this.render()},render:function(){Parse.User.current()?new i:new s}}),u=Parse.Router.extend({routes:{all:"all",active:"active",completed:"completed"},initialize:function(e){},all:function(){a.set({filter:"all"})},active:function(){a.set({filter:"active"})},completed:function(){a.set({filter:"completed"})}}),a=new t;new u;new o;Parse.history.start()});